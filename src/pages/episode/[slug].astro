---
import { CollectionEntry, getCollection } from 'astro:content'
import { episodeSchema } from '../../content/config'
import EpisodeLayout from '../../layouts/EpisodeLayout.astro'
import AudioPlayer from '../../components/audioPlayer.astro'
import astropodConfig from '../../../.astropod/astropod.config.json'

import { markdownToTxt } from 'markdown-to-txt'

export async function getStaticPaths() {
  const postEntries = await getCollection('episode')
  return postEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

interface Props {
  entry: CollectionEntry<'episode'>
}

const { entry } = Astro.props
const episode: episodeSchema = entry.data
const { Content } = await entry.render()
const description = markdownToTxt(entry.body)
---

<EpisodeLayout
  title={episode.title}
  pubDate={episode.pubDate}
  cover={episode.cover}
  explicit={episode.explicit}
  description={description}
  cover={episode.cover}
>
  <Content />
</EpisodeLayout>

<AudioPlayer />

<script define:vars={{ episode }}>
  const musicPlayer = document.getElementById('audio-player-container')
  const audioDownloadLink = document.getElementById('audio-download-link')
  const audioControl = document.getElementById('audio-control')
  const audioLoading = document.getElementById('audio-loading')
  const footer = document.querySelector('.footer > div')

  musicPlayer?.classList.remove('hidden', 'opacity-0')
  musicPlayer?.classList.add('flex')
  const audio = document.querySelector('audio')
  audio.src = episode.audioUrl
  audioLoading?.classList.remove('hidden')
  audioControl?.classList.add('hidden')
  footer?.classList.add('pb-24')
  audioDownloadLink.href = episode.audioUrl
</script>
